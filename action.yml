---
author: Dustin Dortch
name: Cherry-pick to Release Branch
description: Cherry-picks a commit (based on tag) to a release branch.

inputs:
  prefix:
    default: 'v'
    description: 'Version tag prefix (default: v)'
    required: false
  branch_prefix:
    default: 'release'
    description: 'Branch prefix (default: release)'
    required: false
  tag:
    description: 'Tag to cherry-pick'
    required: true

runs:
  using: composite
  steps:
    - name: Full git history
      id: git-history
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        git fetch --all
        git pull --all

    - name: Get major and minor version
      id: major-minor
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        version=${{ inputs.tag}}
        RELEASE_VERSION="${version//${{ inputs.prefix }}}"
        echo "Release version: ${RELEASE_VERSION}"
        IFS='.' read -r major minor patch <<< $RELEASE_VERSION
        echo "major=$major" | tee -a $GITHUB_ENV
        echo "minor=$minor" | tee -a $GITHUB_ENV
        echo "patch=$patch" | tee -a $GITHUB_ENV
        echo "version=$version" | tee -a $GITHUB_OUTPUT
    
    - name: Create Release Branch (if necessary)
      id: create-release-branch
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        git checkout -b ${{ inputs.branch_prefix }}/${{ inputs.prefix }}${major}.${minor}
        git commit --allow-empty -m "Release branch ${{ inputs.branch_prefix }}/${{ inputs.prefix }}${major}.${minor}"
        git push origin ${{ inputs.branch_prefix }}/${{ inputs.prefix }}${major}.${minor}
        git checkout ${{ github.event.repository.default_branch }}

    - name: Checkout cherry-pick branch
      id: cherry-pick-branch
      if: failure() && steps.create-release-branch.outcome == 'failure'
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        currentCommitHash=$(git rev-parse ${{ inputs.tag }}^0)
        echo "cherryPickBranch=cherry-pick/${currentCommitHash}" | tee -a $GITHUB_ENV
        git checkout -b ${cherryPickBranch} ${currentCommitHash}
        git push origin ${cherryPickBranch}

    - name: Create PR to Release Branch
      id: pr-to-release-branch
      if: failure() && steps.cherry-pick-branch.outcome == 'success'
      shell: bash
      run: |
        gh pr create --base ${{ inputs.branch_prefix }}/${{ inputs.prefix }}${major}.${minor} --head ${cherryPickBranch} --title "PR ${cherryPickBranch} to ${{ inputs.branch_prefix }}/${{ inputs.prefix }}${major}.${minor}" --body "PR ${cherryPickBranch} to ${{ inputs.branch_prefix }}/${{ inputs.prefix }}${major}.${minor}"
...